(function(t, s) {
    s.fn.themePin = function(t) {
        var o = 0,
            e = 0,
            i = [],
            a = !1,
            n = s(window),
            p = [],
            r = [];
        t = t || {};
        var c = function() {
                for (var o = 0, e = i.length; o < e; o++) {
                    var p = i[o];
                    if (t.minWidth && n.width() <= t.minWidth) p.parent().is(".pin-wrapper") && p.unwrap(), p.css({
                        width: "",
                        left: "",
                        top: "",
                        position: ""
                    }), t.activeClass && p.removeClass(t.activeClass), p.removeClass("sticky-transition"), p.removeClass("sticky-absolute"), a = !0;
                    else {
                        a = !1;
                        var r = t.containerSelector ? p.closest(t.containerSelector).length ? p.closest(t.containerSelector) : s(t.containerSelector) : s(document.body),
                            c = p.offset(),
                            d = r.offset();
                        if (void 0 !== d) {
                            var l = p.parent().offset();
                            p.parent().is(".pin-wrapper") || p.wrap("<div class='pin-wrapper'>");
                            var f = s.extend({
                                    top: 0,
                                    bottom: 0
                                }, t.padding || {}),
                                h = parseInt(p.parent().parent().css("padding-top")),
                                u = parseInt(p.parent().parent().css("padding-bottom"));
                            t.autoInit && (s("#header").hasClass("header-side") ? (f.top = 0, s(".page-top.fixed-pos").length && (f.top += s(".page-top.fixed-pos").height())) : f.top = 0, void 0 !== t.paddingOffsetTop ? f.top += parseInt(t.paddingOffsetTop, 10) : f.top += 0, void 0 !== t.paddingOffsetBottom ? f.bottom = parseInt(t.paddingOffsetBottom, 10) : f.bottom = 0);
                            var m = p.css("border-bottom"),
                                v = p.outerHeight();
                            p.css("border-bottom", "1px solid transparent");
                            var C = p.outerHeight() - v - 1;
                            p.css("border-bottom", m), p.css({
                                width: p.outerWidth() <= p.parent().width() ? p.outerWidth() : p.parent().width()
                            }), p.parent().css("height", p.outerHeight() + C), !t.autoFit && !t.fitToBottom || p.outerHeight() <= n.height() ? p.data("themePin", {
                                pad: f,
                                from: (t.containerSelector ? d.top : c.top) - f.top + h,
                                pb: u,
                                parentTop: l.top - h,
                                offset: C
                            }) : p.data("themePin", {
                                pad: f,
                                fromFitTop: (t.containerSelector ? d.top : c.top) - f.top + h,
                                from: (t.containerSelector ? d.top : c.top) + p.outerHeight() - s(window).height() + h,
                                pb: u,
                                parentTop: l.top - h,
                                offset: C
                            })
                        }
                    }
                }
            },
            d = function() {
                if (!a) {
                    o = n.scrollTop();
                    for (var c = window.innerHeight || n.height(), d = 0, l = i.length; d < l; d++) {
                        var f, h = s(i[d]),
                            u = h.data("themePin"),
                            m = u.to;
                        if (u) {
                            var v = t.containerSelector ? h.closest(t.containerSelector).length ? h.closest(t.containerSelector) : s(t.containerSelector) : s(document.body),
                                C = h.outerHeight() + u.pad.top <= c;
                            if (u.end = v.offset().top + v.height(), C ? u.to = v.offset().top + v.height() - h.outerHeight() - u.pad.bottom - u.pb : (u.to = v.offset().top + v.height() - c - u.pb, u.to2 = v.height() - h.outerHeight() - u.pad.bottom - u.pb), C) {
                                var b = u.from - u.pad.bottom,
                                    g = u.to - u.pad.top - u.offset;
                                if (void 0 !== u.fromFitTop && u.fromFitTop && (b = u.fromFitTop - u.pad.bottom), b + h.outerHeight() > u.end || b >= g) {
                                    h.css({
                                        position: "",
                                        top: "",
                                        left: ""
                                    }), t.activeClass && h.removeClass(t.activeClass), h.removeClass("sticky-transition"), h.removeClass("sticky-absolute");
                                    continue
                                }
                                o > b && o < g ? (!("fixed" == h.css("position")) && h.css({
                                    left: h.offset().left,
                                    top: u.pad.top
                                }).css("position", "fixed"), t.activeClass && h.addClass(t.activeClass), h.removeClass("sticky-transition"), h.removeClass("sticky-absolute")) : o >= g ? (h.css({
                                    left: "",
                                    top: g - u.parentTop + u.pad.top
                                }).css("position", "absolute"), t.activeClass && h.addClass(t.activeClass), h.hasClass("sticky-absolute") && h.addClass("sticky-transition"), h.addClass("sticky-absolute")) : (h.css({
                                    position: "",
                                    top: "",
                                    left: ""
                                }), t.activeClass && h.removeClass(t.activeClass), h.removeClass("sticky-transition"), h.removeClass("sticky-absolute"))
                            } else if (m != u.to && (p[d] = r[d] = !1), h.height() + u.pad.top + u.pad.bottom > c || p[d] || r[d]) {
                                var y = parseInt(h.parent().parent().css("padding-top"));
                                o + u.pad.top - y <= u.parentTop ? (h.css({
                                    position: "",
                                    top: "",
                                    bottom: "",
                                    left: ""
                                }), p[d] = r[d] = !1) : o >= u.to ? (h.css({
                                    left: "",
                                    top: u.to2,
                                    bottom: ""
                                }).css("position", "absolute"), t.activeClass && h.addClass(t.activeClass), h.hasClass("sticky-absolute") && h.addClass("sticky-transition"), h.addClass("sticky-absolute")) : o >= e ? p[d] ? (p[d] = !1, f = h.offset().top - u.parentTop, h.css({
                                    left: "",
                                    top: f,
                                    bottom: ""
                                }).css("position", "absolute"), t.activeClass && h.addClass(t.activeClass), h.hasClass("sticky-absolute") && h.addClass("sticky-transition"), h.addClass("sticky-absolute")) : !r[d] && h.height() + h.offset().top + u.pad.bottom < o + c && (r[d] = !0, !("fixed" == h.css("position")) && h.css({
                                    left: h.offset().left,
                                    bottom: u.pad.bottom,
                                    top: ""
                                }).css("position", "fixed"), t.activeClass && h.addClass(t.activeClass), h.removeClass("sticky-transition"), h.removeClass("sticky-absolute")) : o < e && (r[d] ? (r[d] = !1, f = h.offset().top - u.parentTop, h.css({
                                    left: "",
                                    top: f,
                                    bottom: ""
                                }).css("position", "absolute"), t.activeClass && h.addClass(t.activeClass), h.hasClass("sticky-absolute") && h.addClass("sticky-transition"), h.addClass("sticky-absolute")) : !p[d] && h.offset().top >= o + u.pad.top && (p[d] = !0, !("fixed" == h.css("position")) && h.css({
                                    left: h.offset().left,
                                    top: u.pad.top,
                                    bottom: ""
                                }).css("position", "fixed"), t.activeClass && h.addClass(t.activeClass), h.removeClass("sticky-transition"), h.removeClass("sticky-absolute")))
                            } else o >= u.parentTop - u.pad.top ? h.css({
                                position: "fixed",
                                top: u.pad.top
                            }) : h.css({
                                position: "",
                                top: "",
                                bottom: "",
                                left: ""
                            }), p[d] = r[d] = !1
                        }
                    }
                    e = o
                }
            },
            l = function() {
                c(), d()
            };
        return this.each(function() {
            var t = s(this),
                o = s(this).data("themePin") || {};
            o && o.update || (i.push(t), s("img", this).one("load", c), o.update = l, s(this).data("themePin", o), p.push(!1), r.push(!1))
        }), s(window).on("smartresize", function() {
            c(), d()
        }), s(window).on("touchmove scroll", d), c(), s(this).bind("recalc.pin", function() {
            c(), d()
        }), this
    }, t = t || {};
    var o = function(t, s) {
        return this.initialize(t, s)
    };
    o.defaults = {
        autoInit: !1,
        minWidth: 992,
        activeClass: "sticky-active",
        padding: {
            top: 0,
            bottom: 0
        },
        offsetTop: 0,
        offsetBottom: 0,
        autoFit: !1,
        fitToBottom: !1
    }, o.prototype = {
        initialize: function(t, s) {
            return t.data("__sticky") ? this : (this.$el = t, this.setData().setOptions(s).build(), this)
        },
        setData: function() {
            return this.$el.data("__sticky", this), this
        },
        setOptions: function(t) {
            return this.options = s.extend(!0, {}, o.defaults, t, {
                wrapper: this.$el
            }), this
        },
        build: function() {
            if (!s.isFunction(s.fn.themePin)) return this;
            var t = this.options.wrapper;
            return t.themePin(this.options), s(window).on("resize", function() {
                if (setTimeout(function() {
                        t.trigger("recalc.pin")
                    }, 800), s(window).width() > 991) {
                    var o = t.parent();
                    t.outerWidth(o.width()), "fixed" == t.css("position") && t.css("left", o.offset().left)
                }
            }), this
        }
    }, s.extend(t, {
        Sticky: o
    }), s.fn.themeSticky = function(o) {
        return this.map(function() {
            var e = s(this);
            return e.data("__sticky") ? (e.trigger("recalc.pin"), setTimeout(function() {
                e.trigger("recalc.pin")
            }, 800), e.data("__sticky")) : new t.Sticky(e, o)
        })
    }
}).apply(this, [window.theme, jQuery]);